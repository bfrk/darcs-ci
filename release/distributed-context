Just "\nContext:\n\n\n[tests/broken_move.sh: adapt to better apply error messages\nBen Franksen <ben.franksen@online.de>**20210317074545\n Ignore-this: 999e8c6a0f46b5b2084dca38822af25cf68c9e324f3a5a3e5329397d774d95993cac3c3b9667eb6a\n] \n\n[TreeMonad: add two comments and some code re-formatting\nBen Franksen <ben.franksen@online.de>**20210620072923\n Ignore-this: 18cf64425f9a03312e6c14b831b68fef1f249bd4ab6ec408a6a3661919283917c985f2f9eb832988\n] \n\n[TreeMonad: more fine grained error checks\nBen Franksen <ben.franksen@online.de>**20210323144929\n Ignore-this: d49beba317aca1d06c5e94226644e7d5d277cae2915db05eb500782aa589cdb014f79f74f08cfa71\n \n In particular, 'readFile' and 'writeFile' now distinguish between\n non-existence and inappropriate type (directory), and 'copy' throws an\n exception when the source item does not exist instead of doing nothing.\n Since System.IO.Error does not export a function to construct an\n InappropriateType IOError, we no longer use the constructor functions, but\n instead import the IOErrorType from GHC.IO.Exception.\n] \n\n[TreeMonad: explicit import of D.U.Path, some simplifications\nBen Franksen <ben.franksen@online.de>**20210316072251\n Ignore-this: bd080c44431b62746a21a1f508eb3a1b03f41993494e26290d09b16eb92f2f9af9849eb781ca92e6\n] \n\n[TreeMonad: factor out findItem\nBen Franksen <ben.franksen@online.de>**20210620070138\n Ignore-this: 956660de8d73e6595a8d895a3b3810a49d4e21e41f8b20701f1dbd7c7925d2126090cfc0344509b6\n \n This will later allow us to throw more precise exceptions.\n] \n\n[better error handling when applying patches\nBen Franksen <ben.franksen@online.de>**20210314220059\n Ignore-this: 7435723695779f02418fae12f5326c3b029a23ba9dd1aa67cbce525f41c74dca35f7cea67476426d\n \n In the TreeMonad we now throw the IO errors that fit the situation instead\n of userError. This allows us to give getter warning messages when using\n runTolerantly. In addition, if we cannot run tolerantly, i.e. when we apply\n patches to pristine, we now notify the user which patch caused the problem\n and suggest to run 'darcs repair' on the repo that contains the broken\n patch. This is important because we no longer silently ignore broken move\n patches.\n] \n\n[re-write of release/gen-version-info.hs\nBen Franksen <ben.franksen@online.de>**20210710073431\n Ignore-this: 974d34cc9a9940dde3ea8a93b076edfb1e4a16ccd7cc2cd62a52be42e585c3b2204c4a6e3277cde2\n \n This simplifies the logic but also replaces the test for existence of _darcs\n with catching all IOExceptions. This makes it more robust in case executing\n darcs fails for some other reason.\n] \n\n[release/gen-version-info.hs: fix missing check for existence of _darcs\nBen Franksen <ben.franksen@online.de>**20210707115839\n Ignore-this: 9ef1aae66c2e75f6232bedb06ece11aee9f213691f5e3d422e1c6bb38d5957b8aab411b14eaa610b\n] \n\n[HasCallStack: withCurrentDirectory, withRepoDir\nBen Franksen <ben.franksen@online.de>**20210708183714\n Ignore-this: d43f561a9683aefc36d78b7664c5c4bdc09e883f23ae60d53101b18eea330cbb6731889c66a21ca5\n] \n\n[fix in checkSuspendedStatus and maybeDisplaySuspendedStatus\nBen Franksen <ben.franksen@online.de>**20210228104448\n Ignore-this: 6c90b32f275a99e6d66cdd05bac997aaa1dae3a1694db9326e4c1fa979a57798cee6f34e83c308cd\n \n We must not try to access either of the rebase patch files if the repo\n location is a remote URL.\n] \n\n[setCurrentDirectory: call error if argument is a remote URL\nBen Franksen <ben.franksen@online.de>**20210708083314\n Ignore-this: 6435e3d0c3b580f680958acb56b67f0f6e5c71ae536770628c3a8f134476ffad9cc519e5315e01a\n] \n\n[resolve issue2682: conflict not marked if tag pulled at the same time\nBen Franksen <ben.franksen@online.de>**20210705075417\n Ignore-this: 3527f75992b5d674be9d5f3e7347b5bdb2a27d326c8cf53676523be0f7860fd0abd6825dcc08569d\n \n The fix is to consider a conflict as resolved only if all conflicting\n patches are (transitively) explicitly depended on by a single patch.\n] \n\n[avoid use of the instance Named (Conflict p) for rebase unsuspend\nBen Franksen <ben.franksen@online.de>**20210705112751\n Ignore-this: 99246554ea7f171c551fc57cbdfc8d882e8a7cd68460abbf3c44ff96dfdca1f730ea23ac44779b8c\n \n This is so that the fix for issue2682 does not break rebase unsuspend, but\n it also makes sense independently: when unsuspending patches we definitely\n don't want explicit dependencies to count as conflict resolutions.\n] \n\n[add findConflicting to Darcs.Patch.Conflict\nBen Franksen <ben.franksen@online.de>**20210704212926\n Ignore-this: c8d14eed7ca3a261a4c6000b448135e016b2a6f5613d4d16d40b908dee40994a47c1b0ec1064b4c8\n] \n\n[re-add isConflicted method to class Conflict\nBen Franksen <ben.franksen@online.de>**20210704210248\n Ignore-this: e6fda415ff4ed6ea7a079f717f20d7d615edcbbdb3c85076a66c526c4fb1ba075fff8a630c2715b3\n] \n\n[improve test for issue2682\nBen Franksen <ben.franksen@online.de>**20210706160306\n Ignore-this: 68ebd0188216cd1a9005f4967e81791db5d38c92a195b15e89490117093e4698db9f06b3ddddc4f3\n] \n\n[accept issue2682\nBen Franksen <ben.franksen@online.de>**20210705074510\n Ignore-this: 92f39b09069c18d1ff3189cb4140fbe9add83d400b09b1056f41d4ac7b42a63b11fc4c948662d0ec\n] \n\n[decouple IsPrimV1 from ApplyState p ~ Tree, simplify runJob\nBen Franksen <ben.franksen@online.de>**20210323143203\n Ignore-this: 7831d21dc0347f2a8edfcd5d27363f04bf3213d5117acdb23f4778b545ca54ae3847fdcd2acb0509\n \n The extra 'ApplyState p ~ Tree' constraint was only for convenience, the\n same effect is achieved with a separate call to checkTree. The rest of the\n changes is replacing case matches with 'Dict <- return checkXxx' which I\n find leads to more readable code because it avoids extra indentation. And\n since all cases of runJob require the 'ApplyState p ~ Tree' constraint\n anyway, we can now float the checkTree out of the large case expression.\n] \n\n[ci: exclude macOS-10.15 && ghc-8.10.4\nBen Franksen <ben.franksen@online.de>**20210611183809\n Ignore-this: 315739f6a58998368cf6dd068d4da8e459374681914f08b0dffc21d923fdc08aef6f6da3d301d699\n] \n\n[get rid of \"nasty hack\" in applyPatchesForRebaseCmd\nBen Franksen <ben.franksen@online.de>**20210302104856\n Ignore-this: 4a83d729e21985c54f7431099874563338df07e206c87e680d80c8b5a032b5a3c2c5b5465fac63f3\n] \n\n[make pending and unrevert follow transaction protocol\nBen Franksen <ben.franksen@online.de>**20210302092935\n Ignore-this: b5d9d59fc0d03a6dfc1a67507a035a59e5a1350f784ced55780cd19b70faca606ae9f7a623e8c72d\n \n This means that all modifications are made to the tentative versions and\n that we define and systematically use revert/finalize.\n \n Note that the implementations of revertTentativeUnrevert and\n finalizeTentativeUnrevert are tricky: the case where we have no unrevert\n bundle present must be handled carefully.\n] \n\n[make D.R.Traverse procedures RW so they work on the tentative state\nBen Franksen <ben.franksen@online.de>**20210303141232\n Ignore-this: bc5346f4bf3470f5189972bac38a7cbd615b2af86293448910dd4c27dcb3004667b6ceb5056bfeee\n \n This required fixing convert import where cleanRepository was called after\n finalizing the transaction.\n] \n\n[remove the tentative state witness parameter for Repository\nBen Franksen <ben.franksen@online.de>**20210301151635\n Ignore-this: d2baeed808cbb74b9a12361abe84f090d8e7e5db6d787c0ba1943c14a17a8f71ecc6e1c26d4fc8cc\n \n Since we now distinguish at the type level and at runtime whether we are in\n a transaction or not, it no longer makes sense to keep the distinction\n between the recorded and the tentative state: inside a transaction the\n recorded state is irrelevant and should be ignored, while outside a\n transaction the tentative state should be ignored and only the recorded\n state is relevant. When we start a transaction both states coincide by\n definition (we throw away any existing tentative state). When we end a\n transaction, we throw away the recorded state and overwrite it with the\n tentative one.\n \n Note that not all of Darcs.Repository has been changed yet to follow the\n transaction protocol yet, in particular the pending and unrevert states.\n This will be done in a later patch because the distinction between recorded\n and tentative state gets in the way of making the decision at runtime when\n reading the state. Also note that while this patch touches many lines of\n code, the changes are very systematic and mostly mechanical.\n] \n\n[fix rt ~ 'RO in AskAboutDeps\nBen Franksen <ben.franksen@online.de>**20210301152702\n Ignore-this: a7407c6f80e3eb5875536ce8fc7a670f138961589efc005811c178f402d9526417089761c838ca6c\n] \n\n[replace readTentativePristine with the generalized readPristine\nBen Franksen <ben.franksen@online.de>**20210227101454\n Ignore-this: d9d1cf61973e9ab95dc708b373f7aadd3e272ff4165eec573ab5e1f44c12581c87c093abd3dd3407\n \n The latter now now does the right thing for both RO and RW repos.\n] \n\n[convert D.R.Pristine to assign the correct access type parameters\nBen Franksen <ben.franksen@online.de>**20210227102318\n Ignore-this: 63c809826e1067304cb7ce41218b14618e17244bc9a3d96c321659b8a1426735f9ef9d791203d821\n \n The same schema as in D.R.Hashed applies: functions that modify the\n tentative pristine are only available for 'RW typed repos, those that only\n read pristine decide at runtime which files to read and stay polymorphic.\n \n A special (and ugly) case is replacePristine which has a case for 'RO typed\n repos, which should only be used when creating a fresh repo. The 'RW case\n now modifies the tentative pristine, so we need to add missing finalization\n in the repair and optimize pristine commands.\n] \n\n[convert size-prefixed pristine when we start a transaction\nBen Franksen <ben.franksen@online.de>**20210227084925\n Ignore-this: c65c10432771c40ca52a6ff0d8598d6495129c95c08e01725187bc3191670461c92244bf73c3a5c5\n \n We must not modify _darcs/hashed_inventory except when finalizing a\n transaction.\n] \n\n[writeTentativeInventory now takes a Repository argument\nBen Franksen <ben.franksen@online.de>**20210225212710\n Ignore-this: c90aad2cd771f5819bf7f488282a5562d1bc7ed41884f575d757670746c6f87b398db2ce30692e8\n] \n\n[lock/unlock inside revert/finalizeRepositoryChanges\nBen Franksen <ben.franksen@online.de>**20210225115451\n Ignore-this: a79c711ff6321244cce72b943864c639f49d362a296fbb5a34b7c805c6b88eb6e7469460e9354cf1\n \n This has the disadvantage that intermediate commits also unlock the\n repository for a short time. However, intermediate commits are mostly\n unnecessary, the only remaining instance is in convert darcs-2, which will\n soon become obsolete anyway.\n] \n\n[convert D.R.Hashed functions to take access typed Repository\nBen Franksen <ben.franksen@online.de>**20210225154559\n Ignore-this: ab05083221ceaa72f2558fbc88b0ca8e4027c5aaf985cfa085f6233ff9c9f6215a77eb1fd34490dc\n \n All procedures in D.R.Hashed that access the tentative state now take a\n Repository 'RW, while 'readPatches' stays polymorphic, but reads the\n tentative or the recorded state, depending on the Repository access type\n parameter. This required to export SAccessType from D.R.InternalTypes and\n return that type from repoAccessType, so that pattern matching on the result\n forces unification of the Repository's access type.\n] \n\n[re-type the rt type parameter to AccessType=RO|RW\nBen Franksen <ben.franksen@online.de>**20210224230403\n Ignore-this: 58799b29145cd3924411fd902ab7e49772d5950a77a159bfd6d31d6ef6370c8d92184cbf9a875455\n \n This patch does not yet go the full way of changing all Repository access\n procedures, only some of the central pieces: revertRepositoryChanges and\n finalizeRepositoryChanges, withRepoLock, repo creation and identification.\n Commands that call withRepoLock now take the lock even when --dry-run is in\n effect. This fixes a potential race condition because in dry-run mode these\n commands still modified the tentative state on disk. Instead, the dry-run\n option is now evaluated in the finalizing procedures (which includes,\n currently, addPendingDiffToPending and addToPending).\n] \n\n[remove rt::RepoType type parameter from PatchSet and PatchInfoAnd\nBen Franksen <ben.franksen@online.de>**20210224225716\n Ignore-this: 21347143ab31dc16399b2b1d7145f88d715d713d92a0f05c74cb6a32948c392a9aa7fe2ea2790a3a\n] \n\n[remove most of Darcs.Patch.RepoType\nBen Franksen <ben.franksen@online.de>**20210119150023\n Ignore-this: eee8e2332d551296501be870481b04f1d24ef7356ca9c7c91fe3a37c0d000b953b0d9064cefe2aad\n \n This removes the type distinction between repos with and without a rebase in\n progress. The 'rt :: RepoType' type parameter (and its kind RepoType) are\n kept for now, in case we ever want to re-introduce such a type distinction\n for some other purpose.\n] \n\n[cleanup code layout of Darcs.Util.Tree.expandUpdate\nBen Franksen <ben.franksen@online.de>**20210429083448\n Ignore-this: 1c2fc782fbbdb3d25cd7ba394c87a8a291626d69a2c1250f9970b280d223f3c4fbe2b5d4a208694c\n] \n\n[add comment to updateHashes in convert import command\nBen Franksen <ben.franksen@online.de>**20210421114628\n Ignore-this: 296fa556cd510a9a39204cbbbfe838d8e7c694f4118b413414c9e24997a63cbb0a12ff38022553ec\n] \n\n[remove an obsolete FIXME comment\nBen Franksen <ben.franksen@online.de>**20210418155917\n Ignore-this: d02fdab017f3223ae4e01efdea2223816f9656abd3ff9d474605c71faeaeef1d1a3f234e8209b88c\n] \n\n[factor out delaySealed\nBen Franksen <ben.franksen@online.de>**20210406121845\n Ignore-this: 5e4c7a5105d564f61001a823034e81451711a9614220300b83a4250cede65c3b021889f04e0baa0b\n] \n\n[add debug message in applyToWorking\nBen Franksen <ben.franksen@online.de>**20210314221902\n Ignore-this: 2f292e632a8e46c65b9797da6a91d24421d2f171d68f59c8c610d3bf9a615e4341528d11080eb1e0\n] \n\n[D.R.Traverse: cut down the list of exported symbols\nBen Franksen <ben.franksen@online.de>**20210303140603\n Ignore-this: 72471dcd6daa900dd833bb4227859730392861d84cd96cb482d485e1a42e32db8d648d9587a8a577\n] \n\n[rename withRepoLocation -> withRepoDir\nBen Franksen <ben.franksen@online.de>**20210228122604\n Ignore-this: 59f365cd4b78349051c71ee8f359d8f47e2009117284b2bbef11d9e16bad31c804d1c6e30a0fc70b\n] \n\n[replace class ApplyMonadState with a top-level type family\nBen Franksen <ben.franksen@online.de>**20210403052400\n Ignore-this: 44e612123ac4c648172b7faa858c454e06202979d4786b5b995af23320de86d1fa81ebfd4e06993b\n \n The class ApplyMonadState was only there to carry the type (constraint)\n family ApplyMonadStateOperations, which I renamed to ApplyMonadOperations\n for brevity.\n] \n\n[cleanup method definitions in D.P.ApplyMonad\nBen Franksen <ben.franksen@online.de>**20210315204754\n Ignore-this: 857d05e8ebefd55ce919d8f0a5e0ee04d52f414fbb67309b7cc95502e912e260dc7300424da4d87c\n \n This removes -fno-warn-missing-methods and explicitly defines missing\n methods as undefined. The default definition of mCreateFile in terms of\n mModifyFilePS is removed. Defining a proper mCreateFile means we can remove\n the existence check from the definition of mModifyFilePS in the instance\n ApplyMonadTree (TM.TreeMonad m).\n] \n\n[remove unused RestrictedApply from D.P.ApplyMonad\nBen Franksen <ben.franksen@online.de>**20210315204621\n Ignore-this: a6baf4368bd7a8894afb559badab38c2ecb6814ff4e4867efc1967815449c2f5fa0d79dcd1590e83\n] \n\n[remove duplicate import of darcsAddMissingHashes\nBen Franksen <ben.franksen@online.de>**20210329092310\n Ignore-this: 5768fb8482f22fcc01214bd6f1dd4f465620dff4c892bc3a782bbb431b63ca8cec303e0c213e6be5\n] \n\n[show index: print table headers\nBen Franksen <ben.franksen@online.de>**20210415095307\n Ignore-this: 18a6aa1d67b99042fcd7922a1759b1c1dc92e6c27da170da59a10eebc9ea1e68ee118098360966d7\n] \n\n[rename replacePristine to writePristine\nBen Franksen <ben.franksen@online.de>**20210227104011\n Ignore-this: 1e83843b748164d7d69358dd5e5c8d068e8556d0b5eb8a6b523d1202a531affebd3f48dee734a2a9\n] \n\n[inline writePristine into the slightly safer replacePristine\nBen Franksen <ben.franksen@online.de>**20210227065632\n Ignore-this: 67be252d4074427f4eda80cdd0b32d9f1df2f6a8a0d01cb765f2f33b126348d647ae8cefcf6c3306\n] \n\n[move writePristine and replacePristine to D.R.Pristine\nBen Franksen <ben.franksen@online.de>**20210226072752\n Ignore-this: 962840dcfe69dc9c7e75d9ff594feb7e8abe592019639c5b0a4c07972124d9ec96ffcbb370fc64dd\n] \n\n[inline D.R.Pristine.withRecorded\nBen Franksen <ben.franksen@online.de>**20210225201917\n Ignore-this: fd7096445bc1ad5649531dd7d7e84c56e2282e468c1a1c1fda73fe67093deb6b28568c2af07687f2\n] \n\n[fix the haddocks for applyToHashedPristine\nBen Franksen <ben.franksen@online.de>**20210306155542\n Ignore-this: a2b27a89532379fcfdb4475e7526e1240b62b4b8ec85825080d923fa9e438f449148e1a64c7ca17a\n] \n\n[make readPristine fail for old-fashioned repos\nBen Franksen <ben.franksen@online.de>**20201109213344\n Ignore-this: d557e21edc3aa84d8cb10d674b0dbbc6e1a6add0b2bf1e9d30affefc0986a5ea30f68435166819e2\n \n The extra code for the case of repos that aren't in hashed format is\n apparently not needed.\n] \n\n[streamline the code in the darcs main module\nBen Franksen <ben.franksen@online.de>**20210304074801\n Ignore-this: 7ae5d5397e77c6a2b29955a1ae88e9524c09e94e127ad2c7a847d3c1a0adb3d4e86ce3724b415d44\n] \n\n[cleanup Darcs.Util.AtExit\nBen Franksen <ben.franksen@online.de>**20210304073226\n Ignore-this: 728c2bda1267808f6064e2414a4d764954a5249ecc198b640585d7d5fc7595644c64d43683ac5ef3\n \n Apart from layout changes, this replaces bracket_ with finally and removes\n the extra mask/unmask stuff; the exit action of bracket/finally is executed\n in masked state anyway, so any further masking/unmasking has no effect.\n] \n\n[fix stale lock files after Ctrl-C\nBen Franksen <ben.franksen@online.de>**20210304064825\n Ignore-this: c362c176b5248c96fa9debb939c309266825ef2b513c2d1f539e8b7f53196cd24195ad9ffd269f40\n \n This changes the order of the handlers in the main function of the darcs\n executable, so that atexit is handled earlier than signals. This should also\n have the effect of removing temporary files and directories created using\n withDelayedDir in a more reliable manner.\n \n Both handleErrors and handleExecFail are uncritical, they merely re-classify\n and annotate certain exceptions and report them in a more user friendly\n fashion, so handleExitFail was also moved out of the withSignalsHandled.\n] \n\n[move command: readPlainTree -> readUnrecordedFiltered\nBen Franksen <ben.franksen@online.de>**20210122172254\n Ignore-this: 24506233de7ee3bdf560bbb72fab7621df4d586c53f910f709169346ea90c7f114d8c0c8ff1a9b90\n \n The difference is that readUnrecordedFiltered (with the given options) uses\n the index, if possible.\n] \n\n[remove lookFor* functions from Darcs.UI.Flags\nBen Franksen <ben.franksen@online.de>**20210605143653\n Ignore-this: 251a3321032281674e26ff2f43894286dd0ee0c1be6047a8eb9617e1f3534b2a1c6ec82fac44f9a4\n \n Two of them are unused (outside of the defining module) and they all collide\n with the members of DiffOpts.\n] \n\n[remove duplicate definition of diffingOpts\nBen Franksen <ben.franksen@online.de>**20210605143413\n Ignore-this: 9980cd2b1b010097fcaec12fe1b97bf322a864cf375ed16d000387a6190a7c4bea2e0094f18e3d8a\n] \n\n[add PatchHeaderConfig\nBen Franksen <ben.franksen@online.de>**20210303171700\n Ignore-this: 51df902f048fe1bdc32146e544ef368824677bd4a88cc4a942db0175450fa667bab2ddccfdf12c37\n \n This groups everything we get from the command options into a record type to\n cut down on the number of parameters of updatePatchHeader. Also add the\n patchname option to rebase unsuspend and re-order the options so they are\n the same as for amend.\n] \n\n[rebase unsuspend: add more patch editing options\nBen Franksen <ben.franksen@online.de>**20210302213552\n Ignore-this: 9173186fbc49dac677ded69fbddf52ff20b22d0c013207f3616fcb917cf915ba05864fe93965ae8\n \n These require no extra code, they are handled by updatePatchHeader.\n] \n\n[ci: run tests only for latest cabal and earliest & latest ghc version\nBen Franksen <ben.franksen@online.de>**20210607073645\n Ignore-this: 38f4353188f3d7b8ffeea1fd600781f171e6bbfa6a84b259689a8080db371d75c12bb542eddb3d0b\n] \n\n[use path definitions from D.R.Paths in a few more places\nBen Franksen <ben.franksen@online.de>**20210227061118\n Ignore-this: 203551b945fc2af5c4eef5a6a6ac5de0f582e919bbfda840bae8b989dc993abb28e17fcdc8404d16\n] \n\n[remove some outdated or otherwise unfortunate comments\nBen Franksen <ben.franksen@online.de>**20210305061108\n Ignore-this: 1196b6fc176f6676db204d6ee9698cf342a7994a8d1804a777e3117a0b76015fefbb4e5a4df81184\n \n The \"otherwise unfortunate\" refers to mentions of repository file paths;\n these will become outdated if we make changes to them.\n] \n\n[use paths from D.R.Paths in D.R.Packs\nBen Franksen <ben.franksen@online.de>**20201108125712\n Ignore-this: 749668dc014f43ac07a19da7465a199285a4481f5ac8daa289e576a30c1399c938e76d3e1eb4cdc3\n \n This also removes an obsolete debugMessage and then inlines\n fetchFilesUsingCache.\n] \n\n[tests/network/show_tags-remote.sh: remove directories\nBen Franksen <ben.franksen@online.de>**20210529153906\n Ignore-this: 4cb6240ee582a069e97478e207041769cbfa27c7674d1ecfa4630926a1cfae43977824a7bd6b58f\n] \n\n[tests for issue1327 and issue2047 fail only for darcs-1 and darcs-2\nBen Franksen <ben.franksen@online.de>**20210527165230\n Ignore-this: aa267cc3017b9d1eea875ff61adfbf9aa4920cdc1cdd5a8f0dc8bb7e6c5f000b1b927bb6c1edf488\n] \n\n[test for issue1579 no longer fails\nBen Franksen <ben.franksen@online.de>**20210527164014\n Ignore-this: 64bba9cb049c4ba78c7977145efbb5ac1f11e1522f4e19e6a1486ffbe18fb5e58da0c72a3f114cfa\n] \n\n[tests: mark issue1014 as no longer failing\nBen Franksen <ben.franksen@online.de>**20210527161920\n Ignore-this: 47d001eef87c89766407280be02af23afa1c6cb357dbf8c5d4ad97c182ee89231b7650167c69d0d5\n \n After fixing a few minor issues in the test script, this test succeeds for\n darcs-3 as that fixes the underlying issue. However, the test script needed\n a few minor fixes to actually fail for the right reason. In particular,\n cloning a conflicted repo nowadays applies conflict markup, which we have to\n revert before pulling, otherwise we get prompted and the test fails with\n \"promptChar: unexpected end of input\".\n] \n\n[harness: run test-framework with explicit RunnerOptions\nBen Franksen <ben.franksen@online.de>**20210303110226\n Ignore-this: 11651f3e41ad325e9608b2c367a866012616f6a58187b2425008932d87188daec3f3ffdfd4a50a17\n] \n\n[remove overspecification of pending from tests\nBen Franksen <ben.franksen@online.de>**20210324072532\n Ignore-this: 3ce02680e19fd8e30aad4ecc0fb69585cce303e3cbb780c5d9a83f81b2b7bccecc086b0bbce92c5e\n \n The test scripts should not prescribe the concrete format of the pending\n patch, not even an empty one.\n] \n\n[obliterate, rebase suspend: pass NoUpdatePending to tentativelyRemovePatches\nBen Franksen <ben.franksen@online.de>**20210302131340\n Ignore-this: 4f35536d5091c3c9cb671a380fa72156330b46cf9ea6ef7bb767b29e182c783af047c9e8cb5b3609\n \n This avoids the redundant use of the (unsafe) tentativelyAddToPending to\n remove what gets added to pending with YesUpdatePending.\n] \n\n[remove UpdatePending parameter to withRepoLock\nBen Franksen <ben.franksen@online.de>**20210122173346\n Ignore-this: c3bde2b310554f26a98d38f6cf97a0c75988b45429a4d16c53f694feb7b62e2c550f71d03a0b5280\n \n It turned out that we always call that procedure with YesUpdatePending, so\n we can as well hard-code it.\n] \n\n[simplify readPatchesUsingSpecificInventory\nBen Franksen <ben.franksen@online.de>**20201223204234\n Ignore-this: a73c7d343c1310e1aacb5d52c439efd3b9a97f7409a670b0e099fb532c60c74d6eececf8abdaf11b\n] \n\n[move revert/finalize of rebase from D.R.Hashed to D.R.Rebase\nBen Franksen <ben.franksen@online.de>**20210224124453\n Ignore-this: 84d15717486d2bc4ea795d024515aa2a339476c2f0cc9943024d761e588d871bde505ad1171ed60a\n] \n\n[in fetchFileLazyPS also check for URI scheme \"https:\"\nBen Franksen <ben.franksen@online.de>**20210525125416\n Ignore-this: 5606ea6f55be3edca3a7ee4507947095352692bd00b61fa15a7a4fb10b8031dd3b91fe430f9d9521\n] \n\n[Darcs.Util.SignalHandler: replace throw with throwIO\nBen Franksen <ben.franksen@online.de>**20210602203613\n Ignore-this: 933bfdeb1e297e6a62beadd3362607aa7cbae9562cd169cfb85e95a0088d5a9c1001f9e90c1ae716\n] \n\n[Darcs.Util.ByteString: avoid throwing exceptions from pure code\nBen Franksen <ben.franksen@online.de>**20210602203401\n Ignore-this: e6dbe87e1dace4fbe3aa386dd9fbb8d097576f460fda5ce5eb60781a8276a2e22f89b8530b4bd8b1\n] \n\n[D.R.Hashed: make debug messages less verbose\nBen Franksen <ben.franksen@online.de>**20210529152703\n Ignore-this: 181e110cf105cb1e25c525420522394bdff0cd604befa27ee4818c335f08139a974096c9a8d66416\n \n The patch name should be sufficient to see which patch is being read.\n] \n\n[Windows build fix in Darcs.UI.External\nGanesh Sittampalam <ganesh@earth.li>**20210603170522\n Ignore-this: 48da742c87f9e281dd7bb4adb95cf7ca3dd0c7f2b5ed301c72703e8699186f8f5a713d8a98695e64\n] \n\n[TAG 2.17.1\nBen Franksen <ben.franksen@online.de>**20210603145935\n Ignore-this: 78fb3abbe5aaee753f99906467c1fafcd15573995d5878e6d8613762190276de8dfed8cbbcbc0c68\n] \n"