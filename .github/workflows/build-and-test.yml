name: Build and Test

on: push

jobs:
  build-with-cabal:
    name: ${{ matrix.os }} / ghc-${{ matrix.ghc }}

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-18.04, ubuntu-20.04, macOS-10.15, macOS-11, windows-2016, windows-2019, windows-2022]
        # faster, less comprehensive:
        os: [ubuntu-20.04, macOS-10.15, windows-2019]
        ghc: ['9.2.3']
        cabal: ['latest']
        exclude:
          # can't build basement (indirect dependency)
          - os: ubuntu-18.04
            ghc: 8.4
    env:
      runtests: ${{ matrix.ghc == '8.2' || matrix.ghc == '9.2.3' }}
      tests-to-run: # e.g. -t=EXAMPLE
      testcmd: cabal run -- darcs-test -j=6 -f=123 -i=yn -c=yn --hide
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - name: Configure git
      if: runner.os == 'Windows'
      run: git config --global core.autocrlf input

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Haskell
      id: setup-haskell-cabal
      uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Configure
      run: cabal configure --enable-tests -fwarn-as-error

    - name: Cache cabal store
      uses: actions/cache@v2
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: cabal-store-${{ matrix.os }}-ghc-${{ matrix.ghc }}-${{ hashFiles('dist-newstyle/cache/plan.json') }}
        restore-keys: |
          cabal-store-${{ matrix.os }}-ghc-${{ matrix.ghc }}

    - name: Build dependencies
      run: cabal build --only-dependencies

    - name: Cache dist-newstyle
      uses: actions/cache@v2
      with:
        path: dist-newstyle/build
        key: dist-newstyle-${{ matrix.os }}-ghc-${{ matrix.ghc }}-${{ hashFiles('dist-newstyle/cache/plan.json','Setup.hs','*.cabal','cabal*','darcs/*','src/**','harness/**','shelly/src/**','release/*') }}
        restore-keys: |
          dist-newstyle-${{ matrix.os }}-ghc-${{ matrix.ghc }}

    - name: Build
      run: cabal build

    - name: Haddock
      if: matrix.ghc != '8.2' && matrix.ghc != '8.4'
      run: cabal haddock lib:darcs

    - name: Run tests on Linux
      if: runner.os == 'Linux' && env.runtests == 'true'
      run: |
        sudo apt-get install lighttpd
        ${{ env.testcmd }} ${{ env.tests-to-run }}

    - name: Run tests on MacOS
      if: runner.os == 'macOS' && env.runtests == 'true'
      run: |
        brew install lighttpd
        brew install gnu-sed
        PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$PATH"
        ${{ env.testcmd }} ${{ env.tests-to-run }}

    - name: Run tests on Windows
      if: runner.os == 'Windows' && env.runtests == 'true'
      # running the tests for all three patch formats takes over an hour
      run: cabal run -- darcs-test -j=6 -f=2 -s=sn -i=yn ${{ env.tests-to-run }} --hide
